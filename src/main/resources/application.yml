spring:
  flyway:
    enabled: true
    baseline-on-migrate: true
  application:
    name: springcloud
  datasource:
    driver-class-name: org.postgresql.Driver
    username: root
    password: 1234
    url: jdbc:postgresql://localhost:5432/OrderDB
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        dialect: org.hibernate.dialect.PostgreSQLDialect
  main:
    web-application-type: reactive
  data:
    mongodb:
      uri: mongodb://root:1234@localhost:27017/OrderDB?authSource=admin
    redis:
      host: localhost
      port: 6379
      lettuce:
        pool:
          max-active: 8
  elasticsearch:
    uris: http://localhost:9200
    password: 1234
  kafka:
    bootstrap-servers: localhost:9101
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: PAYMENT-GROUP
      auto-offset-reset: earliest
  cloud:
    config:
      enabled: false
    gateway:
      routes:
        - id: payment-service
          uri: http://localhost:8081
          predicates:
            - Path=/payments/**
          filters:
            - name: RequestRateLimiter
            - name: Retry
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/oauth2
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    healthcheck:
      enabled: true
  instance:
    status-page-url-path: /api/info
    health-check-url-path: /api/health
logging:
  level:
    org.springframework.cloud: DEBUG
kafka:
  schema-registry-url: http://localhost:8085
schema.registry.url: http://localhost:8085
server:
  port: 8090